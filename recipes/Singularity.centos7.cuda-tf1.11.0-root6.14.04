Bootstrap: docker
From: nvidia/cuda:9.0-cudnn7-devel-centos7

%help
Centos7 with cuda9.0 cudnn7
ML/DL packages  : tensorflow keras sc-learn nccl
Sci.  packages  : numpy pandas sc-image matplotlib opencv-python
Basic python    : ipython jupyter yaml pygments six zmq wheel h5py tqdm mpi4py horovod
Development kit : g++/gcc cython nvcc libqt4-dev python-dev
Utility kit     : git wget emacs vim openssh-client mpich

To start your container simply try
singularity exec THIS_CONTAINER.simg bash

To use GPUs, try
singularity exec --nv THIS_CONTAINER.simg bash

%labels
Maintainer coreyjadams
Version centos7-tf1.11.0-torch0.4.1

#------------
# Global installation
#------------
%environment
    # for system
    export XDG_RUNTIME_DIR=/tmp/$USER
    export CUDA_DEVICE_ORDER=PCI_BUS_ID

%post

    # yum
    yum update -y
    yum groupinstall -y "Development Tools"
    yum install -y epel-release
    yum install -y wget emacs vim 
    yum install -y PyQt4 PyQt4-devel
    yum install -y emacs vim openssh-clients zip 
    yum install -y python-devel python-pip  python-setuptools
    yum install -y hdf5

    # install MPICH
    wget -q http://www.mpich.org/static/downloads/3.2.1/mpich-3.2.1.tar.gz
    tar xf mpich-3.2.1.tar.gz
    cd mpich-3.2.1
    # disable the addition of the RPATH to compiled executables
    # this allows us to override the MPI libraries to use those
    # found via LD_LIBRARY_PATH
    ./configure --prefix=$PWD/install --disable-wrapper-rpath
    make -j 4 install
    # add to local environment to build pi.c
    export PATH=$PATH:$(pwd)/install/bin
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/install/lib
    env | sort
    cd ..

    # nccl2
    git clone https://github.com/NVIDIA/nccl.git
    cd nccl;
    make -j src.build
    make pkg.redhat.build
    rpm -i build/pkg/rpm/x86_64/libnccl* 
    cd -


   # pip basics
   pip --no-cache-dir --disable-pip-version-check install --upgrade setuptools 
   pip --no-cache-dir --disable-pip-version-check install 'matplotlib<3.0' # for python2.7
   pip --no-cache-dir --disable-pip-version-check install 'ipython<6.0'    # for python2.7
   pip --no-cache-dir --disable-pip-version-check install 'ipykernel<5.0'  # for python2.7
   pip --no-cache-dir --disable-pip-version-check install numpy wheel zmq six pygments pyyaml cython gputil psutil humanize h5py tqdm scipy seaborn tables
   pip --no-cache-dir --disable-pip-version-check install  pandas scikit-image scikit-learn Pillow opencv-python
   pip --no-cache-dir --disable-pip-version-check install jupyter notebook

   # tensorflow
   pip --no-cache-dir --disable-pip-version-check install --upgrade tensorflow-gpu==1.11.0
   pip --no-cache-dir --disable-pip-version-check install tensorboard

   # keras
   pip --no-cache-dir --disable-pip-version-check install keras

   # mpi and horovod
   pip --no-cache-dir --disable-pip-version-check install mpi4py
   pip --no-cache-dir --disable-pip-version-check install horovod==0.15.0
